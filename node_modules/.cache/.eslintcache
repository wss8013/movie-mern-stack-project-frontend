[{"/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/index.js":"1","/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/reportWebVitals.js":"2","/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/App.js":"3","/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/components/Login.js":"4","/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/components/MoviesList.js":"5","/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/components/Logout.js":"6","/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/components/Movie.js":"7","/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/services/movies.js":"8","/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/components/AddReview.js":"9","/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/services/favorites.js":"10","/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/components/Container.js":"11","/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/components/FavoriteCard.js":"12","/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/components/ItemTypes.js":"13"},{"size":331,"mtime":1657947603511,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1655959873209,"results":"16","hashOfConfig":"15"},{"size":4702,"mtime":1658467521959,"results":"17","hashOfConfig":"15"},{"size":988,"mtime":1656569082876,"results":"18","hashOfConfig":"15"},{"size":8186,"mtime":1657769260978,"results":"19","hashOfConfig":"15"},{"size":675,"mtime":1656571064000,"results":"20","hashOfConfig":"15"},{"size":5019,"mtime":1657171756348,"results":"21","hashOfConfig":"15"},{"size":1019,"mtime":1656659246626,"results":"22","hashOfConfig":"15"},{"size":2458,"mtime":1656656561844,"results":"23","hashOfConfig":"15"},{"size":545,"mtime":1658471789227,"results":"24","hashOfConfig":"15"},{"size":2507,"mtime":1658595037706,"results":"25","hashOfConfig":"15"},{"size":3333,"mtime":1658558688183,"results":"26","hashOfConfig":"15"},{"size":51,"mtime":1658033604737,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12fzcgh",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/index.js",[],[],"/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/reportWebVitals.js",[],[],[],"/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/App.js",["73"],[],"import { GoogleOAuthProvider } from '@react-oauth/google';\n\nimport { Routes, Route, Link } from 'react-router-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Container from 'react-bootstrap/Container';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { useState, useEffect, useCallback } from 'react';\nimport Login from './components/Login';\nimport Logout from './components/Logout';\n\nimport MoviesList from \"./components/MoviesList\"\nimport Movie from \"./components/Movie\"\nimport AddReview from \"./components/AddReview\"\nimport FavoritesDataService from \"./services/favorites\";\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport FavoriteContainer from './components/Container';\n\n\nimport './App.css';\nimport { NavbarBrand } from 'react-bootstrap';\n\nconst clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [favorites, setFavorites] = useState([]);\n  const [doSaveFaves, setDoSaveFaves] = useState(false);\n  const retrieveFavorites = useCallback(() => {\n    FavoritesDataService.getFavoritesByUserId(user.googleId)\n      .then(response => {\n        setFavorites(response.data.favorites);\n      }).catch(e => {\n        console.error(e);\n      });\n  }, [user]);\n\n  const saveFavorites = useCallback(() => {\n    var data = {\n      _id: user.googleId,\n      favorites: favorites\n    }\n    FavoritesDataService.updateFavorites(data).catch(e => {\n      console.error(e);\n    });\n  }, [favorites, user]);\n\n  useEffect(() => {\n    if (user && doSaveFaves) {\n      saveFavorites();\n      setDoSaveFaves(false);\n    }\n  }, [user, favorites, saveFavorites, doSaveFaves]);\n\n  useEffect(() => {\n    if (user) {\n      retrieveFavorites();\n    }\n  }, [user, retrieveFavorites]);\n\n  const addFavorite = (movieId) => {\n    setDoSaveFaves(true);\n    setFavorites([...favorites, movieId]);\n  }\n\n  const deleteFavorite = (movieId) => {\n    setFavorites(favorites.filter(f => f !== movieId));\n  }\n\n  useEffect(() => {\n    let loginData = JSON.parse(localStorage.getItem(\"login\"));\n    if (loginData) {\n      let loginExp = loginData.exp;\n      let now = Date.now() / 1000;\n      if (now < loginExp) {\n        // Not expired\n        setUser(loginData);\n      } else {\n        // Expired\n        localStorage.setItem(\"login\", null);\n      }\n    }\n  }, []);\n\n  return (\n    <GoogleOAuthProvider clientId={clientId}>\n      <div className=\"App\">\n        <Navbar bg=\"primary\" expand=\"lg\" sticky=\"top\" variant=\"dark\">\n          <Container className=\"container-fluid\">\n            <Navbar.Brand className=\"brand\" href=\"/\">\n              <img src=\"/images/movies-logo.png\" alt=\"movie logo\" className=\"moviesLogo\" />\n              MOVIE TIME\n            </Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n              <Nav className=\"ml-auto\">\n                <Nav.Link as={Link} to={\"/movies\"}>\n                  Movies\n                </Nav.Link>\n                {user ? (\n                  <Nav.Link as={Link} to={\"/favorites\"}>\n                    Favorites\n                  </Nav.Link>\n                ) : (\n                  <Nav.Link >\n                  </Nav.Link>\n                )}\n              </Nav>\n            </Navbar.Collapse>\n            {user ? (\n              <Logout setUser={setUser} />\n            ) : (\n              <Login setUser={setUser} />\n\n            )}\n          </Container>\n        </Navbar>\n        <Routes>\n          <Route exact path={\"/\"} element={\n            <MoviesList\n              user={user}\n              addFavorite={addFavorite}\n              deleteFavorite={deleteFavorite}\n              favorites={favorites}\n            />}\n          />\n          <Route exact path={\"/movies\"} element={\n            <MoviesList\n              user={user}\n              addFavorite={addFavorite}\n              deleteFavorite={deleteFavorite}\n              favorites={favorites}\n            />}\n          />\n          <Route exact path={\"/favorites\"} element={\n            <DndProvider backend={HTML5Backend}>\n              <FavoriteContainer\n                user={user}\n                addFavorite={addFavorite}\n                deleteFavorite={deleteFavorite}\n                favorites={favorites} />\n            </DndProvider>}\n          />\n          <Route exact path={\"/movies/:id/\"} element={\n            <Movie user={user} />}\n          />\n          <Route exact path={\"/movies/:id/review\"} element={\n            <AddReview user={user} />}\n          />\n        </Routes>\n      </div>\n    </GoogleOAuthProvider>\n  );\n}\n\nexport default App;\n","/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/components/Login.js",[],[],"/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/components/MoviesList.js",[],[],"/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/components/Logout.js",["74"],[],"import React from \"react\";\n// import { GoogleLogout } from 'react-google-login';\nimport { googleLogout } from '@react-oauth/google';\nimport { Button } from 'react-bootstrap';\n\n\nconst clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\n\nfunction Logout({ setUser }) {\n\n    const onSuccess = () => {\n        googleLogout();  // helper for logging out\n        setUser(null);\n        localStorage.setItem(\"login\", null);  // clearing local storage\n        console.log('Logout made successfully');\n    };\n\n    return (\n        <div>\n            <Button\n                variant=\"danger\"\n                onClick={onSuccess}>Logout</Button>\n        </div>);\n\n}\n\nexport default Logout;","/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/components/Movie.js",["75","76"],[],"import React, { useState, useEffect } from \"react\";\nimport MovieDataService from \"../services/movies\";\nimport { useNavigate, Link, useParams } from 'react-router-dom';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\nimport Image from \"react-bootstrap/Image\";\nimport Button from \"react-bootstrap/Button\";\nimport moment from \"moment\";\nimport axios from \"axios\";\n\nconst Movie = ({ user }) => {\n    let params = useParams();\n\n    const [movie, setMovie] = useState({\n        id: null,\n        title: \"\",\n        rated: \"\",\n        poster: \"\",\n        reviews: []\n    });\n\n    useEffect(() => {\n        const getMovie = id => {\n            MovieDataService.findById(id)\n                .then(response => {\n                    console.log(response.data);\n                    setMovie(response.data);\n                }).catch(e => {\n                    console.log(e);\n                })\n\n        }\n        getMovie(params.id);\n    }, [params.id]);\n    \n    const deleteReview = (review, index) => {\n        var data = {\n            review_id: review._id,\n            user_id: user.googleId,\n        }\n        MovieDataService.deleteReview(data)\n            .then(response => {\n                setMovie((previousState)=> {\n                    previousState.reviews.splice(index,1);\n                    return ({\n                        ...previousState\n                    })\n                })\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    return (\n        <div>\n            <Container>\n                <Row>\n                    <Col>\n                        <div className=\"poster\">\n                            <Image\n                                className=\"bigPicture\"\n                                src={movie.poster + \"/100px250\"}\n                                onError={(e) => {\n                                    e.target.src = '/images/NoPosterAvailable-crop.jpeg' // some replacement image\n                                }}\n                                fluid />\n                        </div>\n                    </Col>\n                    <Col>\n                        <Card>\n                            <Card.Header as=\"h5\">\n                                {movie.title}\n                            </Card.Header>\n                            <Card.Body>\n                                <Card.Text>\n                                    {movie.plot}\n                                </Card.Text>\n                                {user && <Link to={\"/movies/\" + params.id + \"/review\"}>\n                                    Add Review\n                                </Link>}\n                            </Card.Body>\n                        </Card>\n                        <h2>\n                            Reviews\n                        </h2>\n                        <br></br>\n                        {movie.reviews.map((review, index) => {\n                            return (\n                                <div className=\"d-flex\">\n                                    <div className=\"flex-shrink-0 reviewText\">\n                                        <h5>{review.name + \" reviewed on \"} {moment(review.date).format(\"Do MMMM YYYY\")}</h5>\n                                        <p className=\"review\">{review.review}</p>\n                                        {user && user.googleId === review.user_id &&\n                                            <Row>\n                                                <Col>\n                                                    <Link to={{\n                                                        pathname: \"/movies/\" + params.id + \"/review\"\n                                                    }}\n                                                        state={{\n                                                            currentReview: review\n                                                        }}>\n                                                        Edit\n                                                    </Link>\n                                                </Col>\n                                                <Col>\n                                                    <Button variant=\"link\" onClick={() => {\n                                                        deleteReview(review, index);\n                                                    }}>\n                                                        delete\n                                                    </Button>\n                                                </Col>\n                                            </Row>\n                                        }\n                                    </div>\n                                </div>\n                            )\n                        })}\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n}\n\nexport default Movie;","/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/services/movies.js",[],[],"/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/components/AddReview.js",["77"],[],"import React, { useState, useEffect } from \"react\";\nimport MovieDataService from \"../services/movies\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { useLocation } from 'react-router-dom';\n\nconst AddReview = ({ user }) => {\n    const navigate = useNavigate();\n    let params = useParams();\n\n    let editing = false;\n    let initialReviewState = \"\";\n    let location = useLocation();\n\n    // initialReviewState will have a different value\n    // if we're editing an existing review\n    const [review, setReview] = useState(initialReviewState);\n    const onChangeReview = e => {\n        const review = e.target.value;\n        setReview(review);\n    }\n\n    if (location.state && location.state.currentReview) {\n        editing = true;\n    }\n\n\n    const saveReview = () => {\n        var data = {\n            review: review,\n            name: user.name,\n            user_id: user.googleId,\n            movie_id: params.id // get movie id from url\n        }\n\n        if (editing) {\n            data.review_id = location.state.currentReview._id;\n            MovieDataService.updateReview(data)\n                .then(Response => {\n                    navigate(\"/movies/\" + params.id)\n                })\n                .catch(e => {\n                    console.log(e);\n                });\n\n        } else {\n            MovieDataService.createReview(data)\n                .then(Response => {\n                    navigate(\"/movies/\" + params.id)\n                })\n                .catch(e => {\n                    console.log(e);\n                });\n        }\n    }\n\n    return (\n        <Container className=\"main-container\">\n            <Form>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>{editing ? \"Edit\" : \"Create\"} Review</Form.Label>\n                    <Form.Control\n                        as=\"textarea\"\n                        type=\"text\"\n                        required\n                        review={review}\n                        onChange={onChangeReview}\n                        defaultValue={editing ? null : \"\"}\n                    />\n                </Form.Group>\n                <Button variant=\"primary\" onClick={saveReview}>\n                    Submit\n                </Button>\n            </Form>\n        </Container>\n    )\n}\n\nexport default AddReview;","/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/services/favorites.js",[],[],"/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/components/Container.js",["78","79","80","81"],[],"/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/components/FavoriteCard.js",["82"],[],"import React, { useRef } from 'react'\nimport { useDrag, useDrop } from 'react-dnd'\nimport { ItemTypes } from './ItemTypes.js'\nimport Image from \"react-bootstrap/Image\";\nimport style from \"./favorites.css\"\n\nconst myStyle = {\n    padding: \"10px\", \n    marginBottom: \"0.5rem\",\n     backgroundColor: \"white\" \n}\nexport const Card = ({ id, movie, index, moveCard }) => {\n    const ref = useRef(null)\n    const [{ handlerId }, drop] = useDrop({\n        accept: ItemTypes.CARD,\n        collect(monitor) {\n            return {\n                handlerId: monitor.getHandlerId(),\n            }\n        },\n        hover(item, monitor) {\n            if (!ref.current) {\n                return\n            }\n            const dragIndex = item.index\n            const hoverIndex = index\n            // Don't replace items with themselves\n            if (dragIndex === hoverIndex) {\n                return\n            }\n            // Determine rectangle on screen\n            const hoverBoundingRect = ref.current?.getBoundingClientRect()\n            // Get vertical middle\n            const hoverMiddleY =\n                (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\n            // Determine mouse position\n            const clientOffset = monitor.getClientOffset()\n            // Get pixels to the top\n            const hoverClientY = clientOffset.y - hoverBoundingRect.top\n            // Only perform the move when the mouse has crossed half of the items height\n            // When dragging downwards, only move when the cursor is below 50%\n            // When dragging upwards, only move when the cursor is above 50%\n            // Dragging downwards\n            if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n                return\n            }\n            // Dragging upwards\n            if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n                return\n            }\n            // Time to actually perform the action\n            moveCard(dragIndex, hoverIndex)\n            // Note: we're mutating the monitor item here!\n            // Generally it's better to avoid mutations,\n            // but it's good here for the sake of performance\n            // to avoid expensive index searches.\n            item.index = hoverIndex\n        },\n    })\n    const [{ isDragging }, drag] = useDrag({\n        type: ItemTypes.CARD,\n        item: () => {\n            return { id, index }\n        },\n        collect: (monitor) => ({\n            isDragging: monitor.isDragging(),\n        }),\n    })\n    const opacity = isDragging ? 0 : 1\n    drag(drop(ref))\n    return (\n        <div style={{...myStyle, opacity}}>\n            <div className=\"favoritesCard card\" ref={ref} data-handler-id={handlerId}>\n                <div className=\"favoritesNumber favoritesNumberOneDigit\">{index}</div>\n                <div>\n                    <Image\n                        className=\"card-img favoritesPoster\"\n                        src={movie.poster + \"/100px180\"}\n                        onError={(e) => {\n                            e.target.src = '/images/NoPosterAvailable-crop.jpeg'\n                        }}\n                        fluid />\n                </div>\n                <div className=\"favoritesTitle\">\n                    {movie.title}\n                </div>\n            </div>\n            </div>\n    )\n}\n","/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/components/ItemTypes.js",[],[],{"ruleId":"83","severity":1,"message":"84","line":22,"column":10,"nodeType":"85","messageId":"86","endLine":22,"endColumn":21},{"ruleId":"83","severity":1,"message":"87","line":7,"column":7,"nodeType":"85","messageId":"86","endLine":7,"endColumn":15},{"ruleId":"83","severity":1,"message":"88","line":3,"column":10,"nodeType":"85","messageId":"86","endLine":3,"endColumn":21},{"ruleId":"83","severity":1,"message":"89","line":11,"column":8,"nodeType":"85","messageId":"86","endLine":11,"endColumn":13},{"ruleId":"83","severity":1,"message":"90","line":1,"column":27,"nodeType":"85","messageId":"86","endLine":1,"endColumn":36},{"ruleId":"83","severity":1,"message":"91","line":4,"column":8,"nodeType":"85","messageId":"86","endLine":4,"endColumn":13},{"ruleId":"83","severity":1,"message":"92","line":6,"column":7,"nodeType":"85","messageId":"86","endLine":6,"endColumn":13},{"ruleId":"93","severity":1,"message":"94","line":41,"column":26,"nodeType":"85","messageId":"95","endLine":41,"endColumn":39},{"ruleId":"96","severity":1,"message":"97","line":88,"column":6,"nodeType":"98","endLine":88,"endColumn":8,"suggestions":"99"},{"ruleId":"83","severity":1,"message":"91","line":5,"column":8,"nodeType":"85","messageId":"86","endLine":5,"endColumn":13},"no-unused-vars","'NavbarBrand' is defined but never used.","Identifier","unusedVar","'clientId' is assigned a value but never used.","'useNavigate' is defined but never used.","'axios' is defined but never used.","'useEffect' is defined but never used.","'style' is defined but never used.","'mStyle' is assigned a value but never used.","no-use-before-define","'saveFavorites' was used before it was defined.","usedBeforeDefined","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'moveCard'. Either include it or remove the dependency array.","ArrayExpression",["100"],{"desc":"101","fix":"102"},"Update the dependencies array to be: [moveCard]",{"range":"103","text":"104"},[2210,2212],"[moveCard]"]