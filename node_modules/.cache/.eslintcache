[{"/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/index.js":"1","/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/reportWebVitals.js":"2","/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/App.js":"3","/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/components/Login.js":"4","/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/components/MoviesList.js":"5","/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/components/Logout.js":"6","/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/components/Movie.js":"7","/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/services/movies.js":"8","/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/components/AddReview.js":"9","/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/services/favorites.js":"10"},{"size":701,"mtime":1655963104061,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1655959873209,"results":"13","hashOfConfig":"12"},{"size":3976,"mtime":1657256011781,"results":"14","hashOfConfig":"12"},{"size":988,"mtime":1656569082876,"results":"15","hashOfConfig":"12"},{"size":8237,"mtime":1657255871342,"results":"16","hashOfConfig":"12"},{"size":675,"mtime":1656571064000,"results":"17","hashOfConfig":"12"},{"size":5019,"mtime":1657171756348,"results":"18","hashOfConfig":"12"},{"size":1019,"mtime":1656659246626,"results":"19","hashOfConfig":"12"},{"size":2458,"mtime":1656656561844,"results":"20","hashOfConfig":"12"},{"size":365,"mtime":1657176154287,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"12fzcgh",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"25"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"25"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/index.js",[],[],[],"/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/reportWebVitals.js",[],[],"/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/App.js",["57","58"],[],"import { GoogleOAuthProvider } from '@react-oauth/google';\n\nimport { Routes, Route, Link } from 'react-router-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Container from 'react-bootstrap/Container';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { useState, useEffect, useCallback } from 'react';\nimport Login from './components/Login';\nimport Logout from './components/Logout';\n\n\nimport MoviesList from \"./components/MoviesList\"\nimport Movie from \"./components/Movie\"\nimport AddReview from \"./components/AddReview\"\nimport FavoritesDataService from \"./services/favorites\";\n\n\nimport './App.css';\nimport { NavbarBrand } from 'react-bootstrap';\n\nconst clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\n\nfunction App() {\n\n\n  const [user, setUser] = useState(null);\n  const [favorites, setFavorites] = useState([]);\n\n  //   useEffect((user) => {\n  //     const getFavorite = id => {\n  //         FavoritesDataService.getFavoritesByUserId(id)\n  //             .then(response => {\n  //                 console.log(response.data);\n  //                 setFavorites(response.data);\n  //             }).catch(e => {\n  //                 console.log(e);\n  //             })\n\n  //     }\n  //     getFavorite(user.googleId);\n  // }, [user.googleId]);\n\n  const addFavorite = useCallback((user, movieId) => {\n    setFavorites([...favorites, movieId]);\n    console.log(\" add favorite \");\n    console.log(favorites);\n    console.log(movieId);\n    console.log(user);\n    var data = {\n      _id: user.googleId,\n      favorites: [...favorites, movieId],\n    }\n    FavoritesDataService.updateFavorites(data);\n\n  }, []);\n  // const addFavorite =  useCallback((movieId) => {\n  //   setFavorites([...favorites, movieId])\n  //   console.log(favorites);\n  // });\n\n  const deleteFavorite = (movieId) => {\n    setFavorites(favorites.filter(f => f !== movieId));\n  }\n\n  useEffect(() => {\n    let loginData = JSON.parse(localStorage.getItem(\"login\"));\n    if (loginData) {\n      let loginExp = loginData.exp;\n      let now = Date.now() / 1000;\n      if (now < loginExp) {\n        // Not expired\n        setUser(loginData);\n      } else {\n        // Expired\n        localStorage.setItem(\"login\", null);\n      }\n    }\n  }, []);\n\n  return (\n    <GoogleOAuthProvider clientId={clientId}>\n\n      <div className=\"App\">\n        <Navbar bg=\"primary\" expand=\"lg\" sticky=\"top\" variant=\"dark\">\n          <Container className=\"container-fluid\">\n            <Navbar.Brand className=\"brand\" href=\"/\">\n              <img src=\"/images/movies-logo.png\" alt=\"movie logo\" className=\"moviesLogo\" />\n              MOVIE TIME\n            </Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n              <Nav className=\"ml-auto\">\n                <Nav.Link as={Link} to={\"/movies\"}>\n                  Movies\n                </Nav.Link>\n              </Nav>\n            </Navbar.Collapse>\n            {user ? (\n              <Logout setUser={setUser} />\n            ) : (\n              <Login setUser={setUser} />\n\n            )}\n          </Container>\n        </Navbar>\n        <Routes>\n          <Route exact path={\"/\"} element={\n            <MoviesList\n              user={user}\n              addFavorite={addFavorite}\n              deleteFavorite={deleteFavorite}\n              favorites={favorites}\n            />}\n          />\n          <Route exact path={\"/movies\"} element={\n            <MoviesList\n              user={user}\n              addFavorite={addFavorite}\n              deleteFavorite={deleteFavorite}\n              favorites={favorites}\n            />}\n          />\n          <Route exact path={\"/movies/:id/\"} element={\n            <Movie user={user} />}\n          />\n          <Route exact path={\"/movies/:id/review\"} element={\n            <AddReview user={user} />}\n          />\n        </Routes>\n      </div>\n    </GoogleOAuthProvider>\n  );\n}\n\nexport default App;\n","/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/components/Login.js",[],[],"/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/components/MoviesList.js",[],[],[],"/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/components/Logout.js",["59"],[],"import React from \"react\";\n// import { GoogleLogout } from 'react-google-login';\nimport { googleLogout } from '@react-oauth/google';\nimport { Button } from 'react-bootstrap';\n\n\nconst clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\n\nfunction Logout({ setUser }) {\n\n    const onSuccess = () => {\n        googleLogout();  // helper for logging out\n        setUser(null);\n        localStorage.setItem(\"login\", null);  // clearing local storage\n        console.log('Logout made successfully');\n    };\n\n    return (\n        <div>\n            <Button\n                variant=\"danger\"\n                onClick={onSuccess}>Logout</Button>\n        </div>);\n\n}\n\nexport default Logout;","/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/components/Movie.js",["60","61"],[],"/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/services/movies.js",[],[],"/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/components/AddReview.js",["62"],[],"import React, { useState, useEffect } from \"react\";\nimport MovieDataService from \"../services/movies\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { useLocation } from 'react-router-dom';\n\nconst AddReview = ({ user }) => {\n    const navigate = useNavigate();\n    let params = useParams();\n\n    let editing = false;\n    let initialReviewState = \"\";\n    let location = useLocation();\n\n    // initialReviewState will have a different value\n    // if we're editing an existing review\n    const [review, setReview] = useState(initialReviewState);\n    const onChangeReview = e => {\n        const review = e.target.value;\n        setReview(review);\n    }\n\n    if (location.state && location.state.currentReview) {\n        editing = true;\n    }\n\n\n    const saveReview = () => {\n        var data = {\n            review: review,\n            name: user.name,\n            user_id: user.googleId,\n            movie_id: params.id // get movie id from url\n        }\n\n        if (editing) {\n            data.review_id = location.state.currentReview._id;\n            MovieDataService.updateReview(data)\n                .then(Response => {\n                    navigate(\"/movies/\" + params.id)\n                })\n                .catch(e => {\n                    console.log(e);\n                });\n\n        } else {\n            MovieDataService.createReview(data)\n                .then(Response => {\n                    navigate(\"/movies/\" + params.id)\n                })\n                .catch(e => {\n                    console.log(e);\n                });\n        }\n    }\n\n    return (\n        <Container className=\"main-container\">\n            <Form>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>{editing ? \"Edit\" : \"Create\"} Review</Form.Label>\n                    <Form.Control\n                        as=\"textarea\"\n                        type=\"text\"\n                        required\n                        review={review}\n                        onChange={onChangeReview}\n                        defaultValue={editing ? null : \"\"}\n                    />\n                </Form.Group>\n                <Button variant=\"primary\" onClick={saveReview}>\n                    Submit\n                </Button>\n            </Form>\n        </Container>\n    )\n}\n\nexport default AddReview;","/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/services/favorites.js",[],[],{"ruleId":"63","severity":1,"message":"64","line":20,"column":10,"nodeType":"65","messageId":"66","endLine":20,"endColumn":21},{"ruleId":"67","severity":1,"message":"68","line":56,"column":6,"nodeType":"69","endLine":56,"endColumn":8,"suggestions":"70"},{"ruleId":"63","severity":1,"message":"71","line":7,"column":7,"nodeType":"65","messageId":"66","endLine":7,"endColumn":15},{"ruleId":"63","severity":1,"message":"72","line":3,"column":10,"nodeType":"65","messageId":"66","endLine":3,"endColumn":21},{"ruleId":"63","severity":1,"message":"73","line":11,"column":8,"nodeType":"65","messageId":"66","endLine":11,"endColumn":13},{"ruleId":"63","severity":1,"message":"74","line":1,"column":27,"nodeType":"65","messageId":"66","endLine":1,"endColumn":36},"no-unused-vars","'NavbarBrand' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'favorites'. Either include it or remove the dependency array. You can also do a functional update 'setFavorites(f => ...)' if you only need 'favorites' in the 'setFavorites' call.","ArrayExpression",["75"],"'clientId' is assigned a value but never used.","'useNavigate' is defined but never used.","'axios' is defined but never used.","'useEffect' is defined but never used.",{"desc":"76","fix":"77"},"Update the dependencies array to be: [favorites]",{"range":"78","text":"79"},[1654,1656],"[favorites]"]