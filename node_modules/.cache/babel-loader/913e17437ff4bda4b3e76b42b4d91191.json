{"ast":null,"code":"var _jsxFileName = \"/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/components/Movie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MovieDataService from \"../services/movies\";\nimport { Link, useParams } from 'react-router-dom';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\nimport Image from \"react-bootstrap/Image\";\nimport Button from \"react-bootstrap/Button\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movie = _ref => {\n  _s();\n\n  let {\n    user\n  } = _ref;\n  let params = useParams();\n  const [movie, setMovie] = useState({\n    id: null,\n    title: \"\",\n    rated: \"\",\n    poster: \"\",\n    reviews: []\n  });\n  useEffect(() => {\n    const getMovie = id => {\n      MovieDataService.findById(id).then(response => {\n        console.log(response.data);\n        setMovie(response.data);\n      }).catch(e => {\n        console.log(e);\n      });\n    };\n\n    getMovie(params.id);\n  }, [params.id]);\n\n  const deleteReview = (review, index) => {\n    console.log(\"papapapapap\");\n    console.log(review.review);\n    console.log(\"mamamamama\");\n    console.log(index);\n    console.log(\"kakakakak\");\n    var data = {\n      review_id: review._id,\n      user_id: user.googleId\n    };\n    MovieDataService.deleteReview(data).then(Response => {\n      navigate(\"/movies/\" + params.id);\n    }).catch(e => {\n      console.log(e);\n    }); // setMovie((prevState) => {\n    //     prevState.reviews.splice(index, 1);\n    //     return ({\n    //       ...prevState\n    //     })\n    //   })\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"poster\",\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              className: \"bigPicture\",\n              src: movie.poster + \"/100px250\",\n              onError: e => {\n                e.target.src = '/images/NoPosterAvailable-crop.jpeg'; // some replacement image\n              },\n              fluid: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              as: \"h5\",\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n                children: movie.plot\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }, this), user && /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/movies/\" + params.id + \"/review\",\n                children: \"Add Review\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 42\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Reviews\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), movie.reviews.map((review, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-shrink-0 reviewText\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: [review.name + \" reviewed on \", \" \", moment(review.date).format(\"Do MMMM YYYY\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"review\",\n                  children: review.review\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 41\n                }, this), user && user.googleId === review.user_id && /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      to: {\n                        pathname: \"/movies/\" + params.id + \"/review\"\n                      },\n                      state: {\n                        currentReview: review\n                      },\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 108,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"link\",\n                      onClick: () => {\n                        deleteReview(review, index);\n                      },\n                      children: \"delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 118,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 33\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Movie, \"UoBw9TTBqaaABuG+gA91P1/KCRo=\", false, function () {\n  return [useParams];\n});\n\n_c = Movie;\nexport default Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["React","useState","useEffect","MovieDataService","Link","useParams","Col","Row","Container","Card","Image","Button","moment","axios","Movie","user","params","movie","setMovie","id","title","rated","poster","reviews","getMovie","findById","then","response","console","log","data","catch","e","deleteReview","review","index","review_id","_id","user_id","googleId","Response","navigate","target","src","plot","map","name","date","format","pathname","currentReview"],"sources":["/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/components/Movie.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport MovieDataService from \"../services/movies\";\nimport { Link, useParams } from 'react-router-dom';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\nimport Image from \"react-bootstrap/Image\";\nimport Button from \"react-bootstrap/Button\";\nimport moment from \"moment\";\nimport axios from \"axios\";\n\nconst Movie = ({ user }) => {\n    let params = useParams();\n\n    const [movie, setMovie] = useState({\n        id: null,\n        title: \"\",\n        rated: \"\",\n        poster: \"\",\n        reviews: []\n    });\n\n    useEffect(() => {\n        const getMovie = id => {\n            MovieDataService.findById(id)\n                .then(response => {\n                    console.log(response.data);\n                    setMovie(response.data);\n                }).catch(e => {\n                    console.log(e);\n                })\n\n        }\n        getMovie(params.id);\n    }, [params.id]);\n\n    const deleteReview = (review,index) => {\n        console.log(\"papapapapap\");\n        console.log(review.review);\n        console.log(\"mamamamama\");\n        console.log(index);\n        console.log(\"kakakakak\");\n\n\n        var data = {\n            review_id: review._id,\n            user_id: user.googleId,\n        }\n         MovieDataService.deleteReview(data)\n            .then(Response => {\n                navigate(\"/movies/\" + params.id)\n            })\n            .catch(e => {\n                console.log(e);\n            });\n        // setMovie((prevState) => {\n        //     prevState.reviews.splice(index, 1);\n        //     return ({\n        //       ...prevState\n        //     })\n        //   })\n       \n    };\n\n    return (\n        <div>\n            <Container>\n                <Row>\n                    <Col>\n                        <div className=\"poster\">\n                            <Image\n                                className=\"bigPicture\"\n                                src={movie.poster + \"/100px250\"}\n                                onError={(e) => {\n                                    e.target.src = '/images/NoPosterAvailable-crop.jpeg' // some replacement image\n                                }}\n                                fluid />\n                        </div>\n                    </Col>\n                    <Col>\n                        <Card>\n                            <Card.Header as=\"h5\">\n                                {movie.title}\n                            </Card.Header>\n                            <Card.Body>\n                                <Card.Text>\n                                    {movie.plot}\n                                </Card.Text>\n                                {user && <Link to={\"/movies/\" + params.id + \"/review\"}>\n                                    Add Review\n                                </Link>}\n                            </Card.Body>\n                        </Card>\n                        <h2>\n                            Reviews\n                        </h2>\n                        <br></br>\n                        {movie.reviews.map((review, index) => {\n                            return (\n                                <div className=\"d-flex\">\n                                    <div className=\"flex-shrink-0 reviewText\">\n                                        <h5>{review.name + \" reviewed on \"} {moment(review.date).format(\"Do MMMM YYYY\")}</h5>\n                                        <p className=\"review\">{review.review}</p>\n                                        {user && user.googleId === review.user_id &&\n                                            <Row>\n                                                <Col>\n                                                    <Link to={{\n                                                        pathname: \"/movies/\" + params.id + \"/review\"\n                                                    }}\n                                                        state={{\n                                                            currentReview: review\n                                                        }}>\n                                                        Edit\n                                                    </Link>\n                                                </Col>\n                                                <Col>\n                                                    <Button variant=\"link\" onClick={() => {\n                                                        deleteReview(review,index);\n                                                    }}>\n                                                        delete\n                                                    </Button>\n                                                </Col>\n                                            </Row>\n                                        }\n                                    </div>\n                                </div>\n                            )\n                        })}\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n}\n\nexport default Movie;"],"mappings":"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"},"metadata":{},"sourceType":"module"}