{"ast":null,"code":"var _jsxFileName = \"/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/components/Movie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MovieDataService from \"../services/movies\";\nimport { useParams } from \"react-router-dom\";\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\nimport Image from \"react-bootstrap/Image\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movie = props => {\n  _s();\n\n  let params = useParams();\n  const [movie, setMovie] = useState({\n    id: null,\n    title: \"\",\n    rated: \"\",\n    poster: \"\",\n    reviews: []\n  });\n  useEffect(() => {\n    const getMovie = id => {\n      console.log(\" iiiiiii \");\n      console.log(id);\n      console.log(params.id);\n      MovieDataService.findById(id).then(response => {\n        console.log(\"jerry's data \");\n        console.log(response);\n        return {\n          id: response.data._id,\n          title: \"\",\n          rated: response.data.rated,\n          poster: \"../../public/images/NoPosterAvailable-crop.jpeg\",\n          reviews: response.data.reviews\n        };\n      }).catch(e => {\n        console.log(e);\n      });\n    };\n\n    setMovie(getMovie(params.id));\n  }, [params.id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Poster\",\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              className: \"bigPicture\",\n              src: movie.poster + \"/100px250\",\n              fluid: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              as: \"h5\",\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: movie.plot\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Reviews\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), movie.reviews.map((review, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-shrink-0 reviewText\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: review.name + \" reviewd on \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"review\",\n                  children: review.review\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Movie, \"UoBw9TTBqaaABuG+gA91P1/KCRo=\", false, function () {\n  return [useParams];\n});\n\n_c = Movie;\nexport default Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["React","useState","useEffect","MovieDataService","useParams","Col","Row","Container","Card","Image","Movie","props","params","movie","setMovie","id","title","rated","poster","reviews","getMovie","console","log","findById","then","response","data","_id","catch","e","plot","map","review","index","name"],"sources":["/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/components/Movie.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport MovieDataService from \"../services/movies\";\nimport { useParams } from \"react-router-dom\";\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\nimport Image from \"react-bootstrap/Image\";\n\nconst Movie = props => {\n    let params = useParams();\n\n    const [movie, setMovie] = useState({\n        id: null,\n        title: \"\",\n        rated: \"\",\n        poster: \"\",\n        reviews: []\n    });\n\n    useEffect(() => {\n        const getMovie = id => {\n            console.log(\" iiiiiii \");\n            console.log(id);\n            console.log(params.id);\n            MovieDataService.findById(id)\n            .then(response => {\n                console.log(\"jerry's data \");\n                console.log(response);\n\n            return { \n                id:response.data._id, \n                title: \"\",\n                rated: response.data.rated, \n                poster: \"../../public/images/NoPosterAvailable-crop.jpeg\",\n                reviews: response.data.reviews\n               \n            };\n            }).catch(e => {\n                console.log(e);\n            })\n            \n        }\n        setMovie(getMovie(params.id));\n    }, [params.id]);\n\n    return (\n        <div>\n            <Container>\n                <Row>\n                    <Col>\n                        <div className=\"Poster\">\n                            <Image\n                                className=\"bigPicture\"\n                                src={movie.poster + \"/100px250\"}\n                                fluid />\n                        </div>\n                    </Col>\n                    <Col>\n                        <Card>\n                            <Card.Header as=\"h5\">\n                                {movie.title}\n                            </Card.Header>\n                            <Card.Body>\n                                <Card.Text>\n                                    {movie.plot}\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                        <h2>\n                            Reviews\n                        </h2>\n                        <br></br>\n                        {movie.reviews.map((review, index) => {\n                            return (\n                                <div className=\"d-flex\">\n                                    <div className=\"flex-shrink-0 reviewText\">\n                                        <h5>\n                                            {review.name + \" reviewd on \"}\n                                        </h5>\n                                        <p className=\"review\">{review.review}</p>\n                                    </div>\n                                </div>\n                            )\n                        })}\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n}\n\nexport default Movie;"],"mappings":"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"},"metadata":{},"sourceType":"module"}