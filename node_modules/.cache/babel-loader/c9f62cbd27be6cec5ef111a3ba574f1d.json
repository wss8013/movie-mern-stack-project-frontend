{"ast":null,"code":"import _classCallCheck from \"/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nimport { EnterLeaveCounter } from './EnterLeaveCounter.js';\nimport { createNativeDragSource, matchNativeItemType } from './NativeDragSources/index.js';\nimport * as NativeTypes from './NativeTypes.js';\nimport { getDragPreviewOffset, getEventClientOffset, getNodeClientOffset } from './OffsetUtils.js';\nimport { OptionsReader } from './OptionsReader.js';\nexport var HTML5BackendImpl = /*#__PURE__*/function () {\n  function HTML5BackendImpl(manager, globalContext, options) {\n    var _this = this;\n\n    _classCallCheck(this, HTML5BackendImpl);\n\n    this.sourcePreviewNodes = new Map();\n    this.sourcePreviewNodeOptions = new Map();\n    this.sourceNodes = new Map();\n    this.sourceNodeOptions = new Map();\n    this.dragStartSourceIds = null;\n    this.dropTargetIds = [];\n    this.dragEnterTargetIds = [];\n    this.currentNativeSource = null;\n    this.currentNativeHandle = null;\n    this.currentDragSourceNode = null;\n    this.altKeyPressed = false;\n    this.mouseMoveTimeoutTimer = null;\n    this.asyncEndDragFrameId = null;\n    this.dragOverTargetIds = null;\n    this.lastClientOffset = null;\n    this.hoverRafId = null;\n\n    this.getSourceClientOffset = function (sourceId) {\n      var source = _this.sourceNodes.get(sourceId);\n\n      return source && getNodeClientOffset(source) || null;\n    };\n\n    this.endDragNativeItem = function () {\n      if (!_this.isDraggingNativeItem()) {\n        return;\n      }\n\n      _this.actions.endDrag();\n\n      if (_this.currentNativeHandle) {\n        _this.registry.removeSource(_this.currentNativeHandle);\n      }\n\n      _this.currentNativeHandle = null;\n      _this.currentNativeSource = null;\n    };\n\n    this.isNodeInDocument = function (node) {\n      // Check the node either in the main document or in the current context\n      return Boolean(node && _this.document && _this.document.body && _this.document.body.contains(node));\n    };\n\n    this.endDragIfSourceWasRemovedFromDOM = function () {\n      var node = _this.currentDragSourceNode;\n\n      if (node == null || _this.isNodeInDocument(node)) {\n        return;\n      }\n\n      if (_this.clearCurrentDragSourceNode() && _this.monitor.isDragging()) {\n        _this.actions.endDrag();\n      }\n\n      _this.cancelHover();\n    };\n\n    this.scheduleHover = function (dragOverTargetIds) {\n      if (_this.hoverRafId === null && typeof requestAnimationFrame !== 'undefined') {\n        _this.hoverRafId = requestAnimationFrame(function () {\n          if (_this.monitor.isDragging()) {\n            _this.actions.hover(dragOverTargetIds || [], {\n              clientOffset: _this.lastClientOffset\n            });\n          }\n\n          _this.hoverRafId = null;\n        });\n      }\n    };\n\n    this.cancelHover = function () {\n      if (_this.hoverRafId !== null && typeof cancelAnimationFrame !== 'undefined') {\n        cancelAnimationFrame(_this.hoverRafId);\n        _this.hoverRafId = null;\n      }\n    };\n\n    this.handleTopDragStartCapture = function () {\n      _this.clearCurrentDragSourceNode();\n\n      _this.dragStartSourceIds = [];\n    };\n\n    this.handleTopDragStart = function (e) {\n      if (e.defaultPrevented) {\n        return;\n      }\n\n      var dragStartSourceIds = _this.dragStartSourceIds;\n      _this.dragStartSourceIds = null;\n      var clientOffset = getEventClientOffset(e); // Avoid crashing if we missed a drop event or our previous drag died\n\n      if (_this.monitor.isDragging()) {\n        _this.actions.endDrag();\n\n        _this.cancelHover();\n      } // Don't publish the source just yet (see why below)\n\n\n      _this.actions.beginDrag(dragStartSourceIds || [], {\n        publishSource: false,\n        getSourceClientOffset: _this.getSourceClientOffset,\n        clientOffset: clientOffset\n      });\n\n      var dataTransfer = e.dataTransfer;\n      var nativeType = matchNativeItemType(dataTransfer);\n\n      if (_this.monitor.isDragging()) {\n        if (dataTransfer && typeof dataTransfer.setDragImage === 'function') {\n          // Use custom drag image if user specifies it.\n          // If child drag source refuses drag but parent agrees,\n          // use parent's node as drag image. Neither works in IE though.\n          var sourceId = _this.monitor.getSourceId();\n\n          var sourceNode = _this.sourceNodes.get(sourceId);\n\n          var dragPreview = _this.sourcePreviewNodes.get(sourceId) || sourceNode;\n\n          if (dragPreview) {\n            var _this$getCurrentSourc = _this.getCurrentSourcePreviewNodeOptions(),\n                anchorX = _this$getCurrentSourc.anchorX,\n                anchorY = _this$getCurrentSourc.anchorY,\n                offsetX = _this$getCurrentSourc.offsetX,\n                offsetY = _this$getCurrentSourc.offsetY;\n\n            var anchorPoint = {\n              anchorX: anchorX,\n              anchorY: anchorY\n            };\n            var offsetPoint = {\n              offsetX: offsetX,\n              offsetY: offsetY\n            };\n            var dragPreviewOffset = getDragPreviewOffset(sourceNode, dragPreview, clientOffset, anchorPoint, offsetPoint);\n            dataTransfer.setDragImage(dragPreview, dragPreviewOffset.x, dragPreviewOffset.y);\n          }\n        }\n\n        try {\n          // Firefox won't drag without setting data\n          dataTransfer === null || dataTransfer === void 0 ? void 0 : dataTransfer.setData('application/json', {});\n        } catch (err) {// IE doesn't support MIME types in setData\n        } // Store drag source node so we can check whether\n        // it is removed from DOM and trigger endDrag manually.\n\n\n        _this.setCurrentDragSourceNode(e.target); // Now we are ready to publish the drag source.. or are we not?\n\n\n        var _this$getCurrentSourc2 = _this.getCurrentSourcePreviewNodeOptions(),\n            captureDraggingState = _this$getCurrentSourc2.captureDraggingState;\n\n        if (!captureDraggingState) {\n          // Usually we want to publish it in the next tick so that browser\n          // is able to screenshot the current (not yet dragging) state.\n          //\n          // It also neatly avoids a situation where render() returns null\n          // in the same tick for the source element, and browser freaks out.\n          setTimeout(function () {\n            return _this.actions.publishDragSource();\n          }, 0);\n        } else {\n          // In some cases the user may want to override this behavior, e.g.\n          // to work around IE not supporting custom drag previews.\n          //\n          // When using a custom drag layer, the only way to prevent\n          // the default drag preview from drawing in IE is to screenshot\n          // the dragging state in which the node itself has zero opacity\n          // and height. In this case, though, returning null from render()\n          // will abruptly end the dragging, which is not obvious.\n          //\n          // This is the reason such behavior is strictly opt-in.\n          _this.actions.publishDragSource();\n        }\n      } else if (nativeType) {\n        // A native item (such as URL) dragged from inside the document\n        _this.beginDragNativeItem(nativeType);\n      } else if (dataTransfer && !dataTransfer.types && (e.target && !e.target.hasAttribute || !e.target.hasAttribute('draggable'))) {\n        // Looks like a Safari bug: dataTransfer.types is null, but there was no draggable.\n        // Just let it drag. It's a native type (URL or text) and will be picked up in\n        // dragenter handler.\n        return;\n      } else {\n        // If by this time no drag source reacted, tell browser not to drag.\n        e.preventDefault();\n      }\n    };\n\n    this.handleTopDragEndCapture = function () {\n      if (_this.clearCurrentDragSourceNode() && _this.monitor.isDragging()) {\n        // Firefox can dispatch this event in an infinite loop\n        // if dragend handler does something like showing an alert.\n        // Only proceed if we have not handled it already.\n        _this.actions.endDrag();\n      }\n\n      _this.cancelHover();\n    };\n\n    this.handleTopDragEnterCapture = function (e) {\n      _this.dragEnterTargetIds = [];\n\n      if (_this.isDraggingNativeItem()) {\n        var ref;\n        (ref = _this.currentNativeSource) === null || ref === void 0 ? void 0 : ref.loadDataTransfer(e.dataTransfer);\n      }\n\n      var isFirstEnter = _this.enterLeaveCounter.enter(e.target);\n\n      if (!isFirstEnter || _this.monitor.isDragging()) {\n        return;\n      }\n\n      var dataTransfer = e.dataTransfer;\n      var nativeType = matchNativeItemType(dataTransfer);\n\n      if (nativeType) {\n        // A native item (such as file or URL) dragged from outside the document\n        _this.beginDragNativeItem(nativeType, dataTransfer);\n      }\n    };\n\n    this.handleTopDragEnter = function (e) {\n      var dragEnterTargetIds = _this.dragEnterTargetIds;\n      _this.dragEnterTargetIds = [];\n\n      if (!_this.monitor.isDragging()) {\n        // This is probably a native item type we don't understand.\n        return;\n      }\n\n      _this.altKeyPressed = e.altKey; // If the target changes position as the result of `dragenter`, `dragover` might still\n      // get dispatched despite target being no longer there. The easy solution is to check\n      // whether there actually is a target before firing `hover`.\n\n      if (dragEnterTargetIds.length > 0) {\n        _this.actions.hover(dragEnterTargetIds, {\n          clientOffset: getEventClientOffset(e)\n        });\n      }\n\n      var canDrop = dragEnterTargetIds.some(function (targetId) {\n        return _this.monitor.canDropOnTarget(targetId);\n      });\n\n      if (canDrop) {\n        // IE requires this to fire dragover events\n        e.preventDefault();\n\n        if (e.dataTransfer) {\n          e.dataTransfer.dropEffect = _this.getCurrentDropEffect();\n        }\n      }\n    };\n\n    this.handleTopDragOverCapture = function (e) {\n      _this.dragOverTargetIds = [];\n\n      if (_this.isDraggingNativeItem()) {\n        var ref;\n        (ref = _this.currentNativeSource) === null || ref === void 0 ? void 0 : ref.loadDataTransfer(e.dataTransfer);\n      }\n    };\n\n    this.handleTopDragOver = function (e) {\n      var dragOverTargetIds = _this.dragOverTargetIds;\n      _this.dragOverTargetIds = [];\n\n      if (!_this.monitor.isDragging()) {\n        // This is probably a native item type we don't understand.\n        // Prevent default \"drop and blow away the whole document\" action.\n        e.preventDefault();\n\n        if (e.dataTransfer) {\n          e.dataTransfer.dropEffect = 'none';\n        }\n\n        return;\n      }\n\n      _this.altKeyPressed = e.altKey;\n      _this.lastClientOffset = getEventClientOffset(e);\n\n      _this.scheduleHover(dragOverTargetIds);\n\n      var canDrop = (dragOverTargetIds || []).some(function (targetId) {\n        return _this.monitor.canDropOnTarget(targetId);\n      });\n\n      if (canDrop) {\n        // Show user-specified drop effect.\n        e.preventDefault();\n\n        if (e.dataTransfer) {\n          e.dataTransfer.dropEffect = _this.getCurrentDropEffect();\n        }\n      } else if (_this.isDraggingNativeItem()) {\n        // Don't show a nice cursor but still prevent default\n        // \"drop and blow away the whole document\" action.\n        e.preventDefault();\n      } else {\n        e.preventDefault();\n\n        if (e.dataTransfer) {\n          e.dataTransfer.dropEffect = 'none';\n        }\n      }\n    };\n\n    this.handleTopDragLeaveCapture = function (e) {\n      if (_this.isDraggingNativeItem()) {\n        e.preventDefault();\n      }\n\n      var isLastLeave = _this.enterLeaveCounter.leave(e.target);\n\n      if (!isLastLeave) {\n        return;\n      }\n\n      if (_this.isDraggingNativeItem()) {\n        setTimeout(function () {\n          return _this.endDragNativeItem();\n        }, 0);\n      }\n\n      _this.cancelHover();\n    };\n\n    this.handleTopDropCapture = function (e) {\n      _this.dropTargetIds = [];\n\n      if (_this.isDraggingNativeItem()) {\n        var ref;\n        e.preventDefault();\n        (ref = _this.currentNativeSource) === null || ref === void 0 ? void 0 : ref.loadDataTransfer(e.dataTransfer);\n      } else if (matchNativeItemType(e.dataTransfer)) {\n        // Dragging some elements, like <a> and <img> may still behave like a native drag event,\n        // even if the current drag event matches a user-defined type.\n        // Stop the default behavior when we're not expecting a native item to be dropped.\n        e.preventDefault();\n      }\n\n      _this.enterLeaveCounter.reset();\n    };\n\n    this.handleTopDrop = function (e) {\n      var dropTargetIds = _this.dropTargetIds;\n      _this.dropTargetIds = [];\n\n      _this.actions.hover(dropTargetIds, {\n        clientOffset: getEventClientOffset(e)\n      });\n\n      _this.actions.drop({\n        dropEffect: _this.getCurrentDropEffect()\n      });\n\n      if (_this.isDraggingNativeItem()) {\n        _this.endDragNativeItem();\n      } else if (_this.monitor.isDragging()) {\n        _this.actions.endDrag();\n      }\n\n      _this.cancelHover();\n    };\n\n    this.handleSelectStart = function (e) {\n      var target = e.target; // Only IE requires us to explicitly say\n      // we want drag drop operation to start\n\n      if (typeof target.dragDrop !== 'function') {\n        return;\n      } // Inputs and textareas should be selectable\n\n\n      if (target.tagName === 'INPUT' || target.tagName === 'SELECT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n        return;\n      } // For other targets, ask IE\n      // to enable drag and drop\n\n\n      e.preventDefault();\n      target.dragDrop();\n    };\n\n    this.options = new OptionsReader(globalContext, options);\n    this.actions = manager.getActions();\n    this.monitor = manager.getMonitor();\n    this.registry = manager.getRegistry();\n    this.enterLeaveCounter = new EnterLeaveCounter(this.isNodeInDocument);\n  }\n\n  _createClass(HTML5BackendImpl, [{\n    key: \"profile\",\n    value:\n    /**\n    * Generate profiling statistics for the HTML5Backend.\n    */\n    function profile() {\n      var ref, ref1;\n      return {\n        sourcePreviewNodes: this.sourcePreviewNodes.size,\n        sourcePreviewNodeOptions: this.sourcePreviewNodeOptions.size,\n        sourceNodeOptions: this.sourceNodeOptions.size,\n        sourceNodes: this.sourceNodes.size,\n        dragStartSourceIds: ((ref = this.dragStartSourceIds) === null || ref === void 0 ? void 0 : ref.length) || 0,\n        dropTargetIds: this.dropTargetIds.length,\n        dragEnterTargetIds: this.dragEnterTargetIds.length,\n        dragOverTargetIds: ((ref1 = this.dragOverTargetIds) === null || ref1 === void 0 ? void 0 : ref1.length) || 0\n      };\n    } // public for test\n\n  }, {\n    key: \"window\",\n    get: function get() {\n      return this.options.window;\n    }\n  }, {\n    key: \"document\",\n    get: function get() {\n      return this.options.document;\n    }\n    /**\n    * Get the root element to use for event subscriptions\n    */\n\n  }, {\n    key: \"rootElement\",\n    get: function get() {\n      return this.options.rootElement;\n    }\n  }, {\n    key: \"setup\",\n    value: function setup() {\n      var root = this.rootElement;\n\n      if (root === undefined) {\n        return;\n      }\n\n      if (root.__isReactDndBackendSetUp) {\n        throw new Error('Cannot have two HTML5 backends at the same time.');\n      }\n\n      root.__isReactDndBackendSetUp = true;\n      this.addEventListeners(root);\n    }\n  }, {\n    key: \"teardown\",\n    value: function teardown() {\n      var root = this.rootElement;\n\n      if (root === undefined) {\n        return;\n      }\n\n      root.__isReactDndBackendSetUp = false;\n      this.removeEventListeners(this.rootElement);\n      this.clearCurrentDragSourceNode();\n\n      if (this.asyncEndDragFrameId) {\n        var ref;\n        (ref = this.window) === null || ref === void 0 ? void 0 : ref.cancelAnimationFrame(this.asyncEndDragFrameId);\n      }\n    }\n  }, {\n    key: \"connectDragPreview\",\n    value: function connectDragPreview(sourceId, node, options) {\n      var _this2 = this;\n\n      this.sourcePreviewNodeOptions.set(sourceId, options);\n      this.sourcePreviewNodes.set(sourceId, node);\n      return function () {\n        _this2.sourcePreviewNodes.delete(sourceId);\n\n        _this2.sourcePreviewNodeOptions.delete(sourceId);\n      };\n    }\n  }, {\n    key: \"connectDragSource\",\n    value: function connectDragSource(sourceId, node, options) {\n      var _this3 = this;\n\n      this.sourceNodes.set(sourceId, node);\n      this.sourceNodeOptions.set(sourceId, options);\n\n      var handleDragStart = function handleDragStart(e) {\n        return _this3.handleDragStart(e, sourceId);\n      };\n\n      var handleSelectStart = function handleSelectStart(e) {\n        return _this3.handleSelectStart(e);\n      };\n\n      node.setAttribute('draggable', 'true');\n      node.addEventListener('dragstart', handleDragStart);\n      node.addEventListener('selectstart', handleSelectStart);\n      return function () {\n        _this3.sourceNodes.delete(sourceId);\n\n        _this3.sourceNodeOptions.delete(sourceId);\n\n        node.removeEventListener('dragstart', handleDragStart);\n        node.removeEventListener('selectstart', handleSelectStart);\n        node.setAttribute('draggable', 'false');\n      };\n    }\n  }, {\n    key: \"connectDropTarget\",\n    value: function connectDropTarget(targetId, node) {\n      var _this4 = this;\n\n      var handleDragEnter = function handleDragEnter(e) {\n        return _this4.handleDragEnter(e, targetId);\n      };\n\n      var handleDragOver = function handleDragOver(e) {\n        return _this4.handleDragOver(e, targetId);\n      };\n\n      var handleDrop = function handleDrop(e) {\n        return _this4.handleDrop(e, targetId);\n      };\n\n      node.addEventListener('dragenter', handleDragEnter);\n      node.addEventListener('dragover', handleDragOver);\n      node.addEventListener('drop', handleDrop);\n      return function () {\n        node.removeEventListener('dragenter', handleDragEnter);\n        node.removeEventListener('dragover', handleDragOver);\n        node.removeEventListener('drop', handleDrop);\n      };\n    }\n  }, {\n    key: \"addEventListeners\",\n    value: function addEventListeners(target) {\n      // SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n      if (!target.addEventListener) {\n        return;\n      }\n\n      target.addEventListener('dragstart', this.handleTopDragStart);\n      target.addEventListener('dragstart', this.handleTopDragStartCapture, true);\n      target.addEventListener('dragend', this.handleTopDragEndCapture, true);\n      target.addEventListener('dragenter', this.handleTopDragEnter);\n      target.addEventListener('dragenter', this.handleTopDragEnterCapture, true);\n      target.addEventListener('dragleave', this.handleTopDragLeaveCapture, true);\n      target.addEventListener('dragover', this.handleTopDragOver);\n      target.addEventListener('dragover', this.handleTopDragOverCapture, true);\n      target.addEventListener('drop', this.handleTopDrop);\n      target.addEventListener('drop', this.handleTopDropCapture, true);\n    }\n  }, {\n    key: \"removeEventListeners\",\n    value: function removeEventListeners(target) {\n      // SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n      if (!target.removeEventListener) {\n        return;\n      }\n\n      target.removeEventListener('dragstart', this.handleTopDragStart);\n      target.removeEventListener('dragstart', this.handleTopDragStartCapture, true);\n      target.removeEventListener('dragend', this.handleTopDragEndCapture, true);\n      target.removeEventListener('dragenter', this.handleTopDragEnter);\n      target.removeEventListener('dragenter', this.handleTopDragEnterCapture, true);\n      target.removeEventListener('dragleave', this.handleTopDragLeaveCapture, true);\n      target.removeEventListener('dragover', this.handleTopDragOver);\n      target.removeEventListener('dragover', this.handleTopDragOverCapture, true);\n      target.removeEventListener('drop', this.handleTopDrop);\n      target.removeEventListener('drop', this.handleTopDropCapture, true);\n    }\n  }, {\n    key: \"getCurrentSourceNodeOptions\",\n    value: function getCurrentSourceNodeOptions() {\n      var sourceId = this.monitor.getSourceId();\n      var sourceNodeOptions = this.sourceNodeOptions.get(sourceId);\n      return _objectSpread({\n        dropEffect: this.altKeyPressed ? 'copy' : 'move'\n      }, sourceNodeOptions || {});\n    }\n  }, {\n    key: \"getCurrentDropEffect\",\n    value: function getCurrentDropEffect() {\n      if (this.isDraggingNativeItem()) {\n        // It makes more sense to default to 'copy' for native resources\n        return 'copy';\n      }\n\n      return this.getCurrentSourceNodeOptions().dropEffect;\n    }\n  }, {\n    key: \"getCurrentSourcePreviewNodeOptions\",\n    value: function getCurrentSourcePreviewNodeOptions() {\n      var sourceId = this.monitor.getSourceId();\n      var sourcePreviewNodeOptions = this.sourcePreviewNodeOptions.get(sourceId);\n      return _objectSpread({\n        anchorX: 0.5,\n        anchorY: 0.5,\n        captureDraggingState: false\n      }, sourcePreviewNodeOptions || {});\n    }\n  }, {\n    key: \"isDraggingNativeItem\",\n    value: function isDraggingNativeItem() {\n      var itemType = this.monitor.getItemType();\n      return Object.keys(NativeTypes).some(function (key) {\n        return NativeTypes[key] === itemType;\n      });\n    }\n  }, {\n    key: \"beginDragNativeItem\",\n    value: function beginDragNativeItem(type, dataTransfer) {\n      this.clearCurrentDragSourceNode();\n      this.currentNativeSource = createNativeDragSource(type, dataTransfer);\n      this.currentNativeHandle = this.registry.addSource(type, this.currentNativeSource);\n      this.actions.beginDrag([this.currentNativeHandle]);\n    }\n  }, {\n    key: \"setCurrentDragSourceNode\",\n    value: function setCurrentDragSourceNode(node) {\n      var _this5 = this;\n\n      this.clearCurrentDragSourceNode();\n      this.currentDragSourceNode = node; // A timeout of > 0 is necessary to resolve Firefox issue referenced\n      // See:\n      //   * https://github.com/react-dnd/react-dnd/pull/928\n      //   * https://github.com/react-dnd/react-dnd/issues/869\n\n      var MOUSE_MOVE_TIMEOUT = 1000; // Receiving a mouse event in the middle of a dragging operation\n      // means it has ended and the drag source node disappeared from DOM,\n      // so the browser didn't dispatch the dragend event.\n      //\n      // We need to wait before we start listening for mousemove events.\n      // This is needed because the drag preview needs to be drawn or else it fires an 'mousemove' event\n      // immediately in some browsers.\n      //\n      // See:\n      //   * https://github.com/react-dnd/react-dnd/pull/928\n      //   * https://github.com/react-dnd/react-dnd/issues/869\n      //\n\n      this.mouseMoveTimeoutTimer = setTimeout(function () {\n        var ref;\n        return (ref = _this5.rootElement) === null || ref === void 0 ? void 0 : ref.addEventListener('mousemove', _this5.endDragIfSourceWasRemovedFromDOM, true);\n      }, MOUSE_MOVE_TIMEOUT);\n    }\n  }, {\n    key: \"clearCurrentDragSourceNode\",\n    value: function clearCurrentDragSourceNode() {\n      if (this.currentDragSourceNode) {\n        this.currentDragSourceNode = null;\n\n        if (this.rootElement) {\n          var ref;\n          (ref = this.window) === null || ref === void 0 ? void 0 : ref.clearTimeout(this.mouseMoveTimeoutTimer || undefined);\n          this.rootElement.removeEventListener('mousemove', this.endDragIfSourceWasRemovedFromDOM, true);\n        }\n\n        this.mouseMoveTimeoutTimer = null;\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"handleDragStart\",\n    value: function handleDragStart(e, sourceId) {\n      if (e.defaultPrevented) {\n        return;\n      }\n\n      if (!this.dragStartSourceIds) {\n        this.dragStartSourceIds = [];\n      }\n\n      this.dragStartSourceIds.unshift(sourceId);\n    }\n  }, {\n    key: \"handleDragEnter\",\n    value: function handleDragEnter(_e, targetId) {\n      this.dragEnterTargetIds.unshift(targetId);\n    }\n  }, {\n    key: \"handleDragOver\",\n    value: function handleDragOver(_e, targetId) {\n      if (this.dragOverTargetIds === null) {\n        this.dragOverTargetIds = [];\n      }\n\n      this.dragOverTargetIds.unshift(targetId);\n    }\n  }, {\n    key: \"handleDrop\",\n    value: function handleDrop(_e, targetId) {\n      this.dropTargetIds.unshift(targetId);\n    }\n  }]);\n\n  return HTML5BackendImpl;\n}();","map":{"version":3,"mappings":"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","names":["EnterLeaveCounter","createNativeDragSource","matchNativeItemType","NativeTypes","getDragPreviewOffset","getEventClientOffset","getNodeClientOffset","OptionsReader","HTML5BackendImpl","manager","globalContext","options","sourcePreviewNodes","Map","sourcePreviewNodeOptions","sourceNodes","sourceNodeOptions","dragStartSourceIds","dropTargetIds","dragEnterTargetIds","currentNativeSource","currentNativeHandle","currentDragSourceNode","altKeyPressed","mouseMoveTimeoutTimer","asyncEndDragFrameId","dragOverTargetIds","lastClientOffset","hoverRafId","getSourceClientOffset","sourceId","source","get","endDragNativeItem","isDraggingNativeItem","actions","endDrag","registry","removeSource","isNodeInDocument","node","Boolean","document","body","contains","endDragIfSourceWasRemovedFromDOM","clearCurrentDragSourceNode","monitor","isDragging","cancelHover","scheduleHover","requestAnimationFrame","hover","clientOffset","cancelAnimationFrame","handleTopDragStartCapture","handleTopDragStart","e","defaultPrevented","beginDrag","publishSource","dataTransfer","nativeType","setDragImage","getSourceId","sourceNode","dragPreview","getCurrentSourcePreviewNodeOptions","anchorX","anchorY","offsetX","offsetY","anchorPoint","offsetPoint","dragPreviewOffset","x","y","setData","err","setCurrentDragSourceNode","target","captureDraggingState","setTimeout","publishDragSource","beginDragNativeItem","types","hasAttribute","preventDefault","handleTopDragEndCapture","handleTopDragEnterCapture","ref","loadDataTransfer","isFirstEnter","enterLeaveCounter","enter","handleTopDragEnter","altKey","length","canDrop","some","targetId","canDropOnTarget","dropEffect","getCurrentDropEffect","handleTopDragOverCapture","handleTopDragOver","handleTopDragLeaveCapture","isLastLeave","leave","handleTopDropCapture","reset","handleTopDrop","drop","handleSelectStart","dragDrop","tagName","isContentEditable","getActions","getMonitor","getRegistry","ref1","size","window","rootElement","root","undefined","__isReactDndBackendSetUp","Error","addEventListeners","removeEventListeners","set","delete","handleDragStart","setAttribute","addEventListener","removeEventListener","handleDragEnter","handleDragOver","handleDrop","_objectSpread","getCurrentSourceNodeOptions","itemType","getItemType","Object","keys","key","type","addSource","MOUSE_MOVE_TIMEOUT","clearTimeout","unshift","_e"],"sources":["/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/node_modules/react-dnd-html5-backend/src/HTML5BackendImpl.ts"],"sourcesContent":["import type {\n\tBackend,\n\tDragDropActions,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tIdentifier,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport { EnterLeaveCounter } from './EnterLeaveCounter.js'\nimport {\n\tcreateNativeDragSource,\n\tmatchNativeItemType,\n} from './NativeDragSources/index.js'\nimport type { NativeDragSource } from './NativeDragSources/NativeDragSource.js'\nimport * as NativeTypes from './NativeTypes.js'\nimport {\n\tgetDragPreviewOffset,\n\tgetEventClientOffset,\n\tgetNodeClientOffset,\n} from './OffsetUtils.js'\nimport { OptionsReader } from './OptionsReader.js'\nimport type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\n\ntype RootNode = Node & { __isReactDndBackendSetUp: boolean | undefined }\n\nexport class HTML5BackendImpl implements Backend {\n\tprivate options: OptionsReader\n\n\t// React-Dnd Components\n\tprivate actions: DragDropActions\n\tprivate monitor: DragDropMonitor\n\tprivate registry: HandlerRegistry\n\n\t// Internal State\n\tprivate enterLeaveCounter: EnterLeaveCounter\n\n\tprivate sourcePreviewNodes: Map<string, Element> = new Map()\n\tprivate sourcePreviewNodeOptions: Map<string, any> = new Map()\n\tprivate sourceNodes: Map<string, Element> = new Map()\n\tprivate sourceNodeOptions: Map<string, any> = new Map()\n\n\tprivate dragStartSourceIds: string[] | null = null\n\tprivate dropTargetIds: string[] = []\n\tprivate dragEnterTargetIds: string[] = []\n\tprivate currentNativeSource: NativeDragSource | null = null\n\tprivate currentNativeHandle: Identifier | null = null\n\tprivate currentDragSourceNode: Element | null = null\n\tprivate altKeyPressed = false\n\tprivate mouseMoveTimeoutTimer: number | null = null\n\tprivate asyncEndDragFrameId: number | null = null\n\tprivate dragOverTargetIds: string[] | null = null\n\n\tprivate lastClientOffset: XYCoord | null = null\n\tprivate hoverRafId: number | null = null\n\n\tpublic constructor(\n\t\tmanager: DragDropManager,\n\t\tglobalContext?: HTML5BackendContext,\n\t\toptions?: HTML5BackendOptions,\n\t) {\n\t\tthis.options = new OptionsReader(globalContext, options)\n\t\tthis.actions = manager.getActions()\n\t\tthis.monitor = manager.getMonitor()\n\t\tthis.registry = manager.getRegistry()\n\t\tthis.enterLeaveCounter = new EnterLeaveCounter(this.isNodeInDocument)\n\t}\n\n\t/**\n\t * Generate profiling statistics for the HTML5Backend.\n\t */\n\tpublic profile(): Record<string, number> {\n\t\treturn {\n\t\t\tsourcePreviewNodes: this.sourcePreviewNodes.size,\n\t\t\tsourcePreviewNodeOptions: this.sourcePreviewNodeOptions.size,\n\t\t\tsourceNodeOptions: this.sourceNodeOptions.size,\n\t\t\tsourceNodes: this.sourceNodes.size,\n\t\t\tdragStartSourceIds: this.dragStartSourceIds?.length || 0,\n\t\t\tdropTargetIds: this.dropTargetIds.length,\n\t\t\tdragEnterTargetIds: this.dragEnterTargetIds.length,\n\t\t\tdragOverTargetIds: this.dragOverTargetIds?.length || 0,\n\t\t}\n\t}\n\n\t// public for test\n\tpublic get window(): Window | undefined {\n\t\treturn this.options.window\n\t}\n\tpublic get document(): Document | undefined {\n\t\treturn this.options.document\n\t}\n\t/**\n\t * Get the root element to use for event subscriptions\n\t */\n\tprivate get rootElement(): Node | undefined {\n\t\treturn this.options.rootElement as Node\n\t}\n\n\tpublic setup(): void {\n\t\tconst root = this.rootElement as RootNode | undefined\n\t\tif (root === undefined) {\n\t\t\treturn\n\t\t}\n\n\t\tif (root.__isReactDndBackendSetUp) {\n\t\t\tthrow new Error('Cannot have two HTML5 backends at the same time.')\n\t\t}\n\t\troot.__isReactDndBackendSetUp = true\n\t\tthis.addEventListeners(root)\n\t}\n\n\tpublic teardown(): void {\n\t\tconst root = this.rootElement as RootNode\n\t\tif (root === undefined) {\n\t\t\treturn\n\t\t}\n\n\t\troot.__isReactDndBackendSetUp = false\n\t\tthis.removeEventListeners(this.rootElement as Element)\n\t\tthis.clearCurrentDragSourceNode()\n\t\tif (this.asyncEndDragFrameId) {\n\t\t\tthis.window?.cancelAnimationFrame(this.asyncEndDragFrameId)\n\t\t}\n\t}\n\n\tpublic connectDragPreview(\n\t\tsourceId: string,\n\t\tnode: Element,\n\t\toptions: any,\n\t): Unsubscribe {\n\t\tthis.sourcePreviewNodeOptions.set(sourceId, options)\n\t\tthis.sourcePreviewNodes.set(sourceId, node)\n\n\t\treturn (): void => {\n\t\t\tthis.sourcePreviewNodes.delete(sourceId)\n\t\t\tthis.sourcePreviewNodeOptions.delete(sourceId)\n\t\t}\n\t}\n\n\tpublic connectDragSource(\n\t\tsourceId: string,\n\t\tnode: Element,\n\t\toptions: any,\n\t): Unsubscribe {\n\t\tthis.sourceNodes.set(sourceId, node)\n\t\tthis.sourceNodeOptions.set(sourceId, options)\n\n\t\tconst handleDragStart = (e: any) => this.handleDragStart(e, sourceId)\n\t\tconst handleSelectStart = (e: any) => this.handleSelectStart(e)\n\n\t\tnode.setAttribute('draggable', 'true')\n\t\tnode.addEventListener('dragstart', handleDragStart)\n\t\tnode.addEventListener('selectstart', handleSelectStart)\n\n\t\treturn (): void => {\n\t\t\tthis.sourceNodes.delete(sourceId)\n\t\t\tthis.sourceNodeOptions.delete(sourceId)\n\n\t\t\tnode.removeEventListener('dragstart', handleDragStart)\n\t\t\tnode.removeEventListener('selectstart', handleSelectStart)\n\t\t\tnode.setAttribute('draggable', 'false')\n\t\t}\n\t}\n\n\tpublic connectDropTarget(targetId: string, node: HTMLElement): Unsubscribe {\n\t\tconst handleDragEnter = (e: DragEvent) => this.handleDragEnter(e, targetId)\n\t\tconst handleDragOver = (e: DragEvent) => this.handleDragOver(e, targetId)\n\t\tconst handleDrop = (e: DragEvent) => this.handleDrop(e, targetId)\n\n\t\tnode.addEventListener('dragenter', handleDragEnter)\n\t\tnode.addEventListener('dragover', handleDragOver)\n\t\tnode.addEventListener('drop', handleDrop)\n\n\t\treturn (): void => {\n\t\t\tnode.removeEventListener('dragenter', handleDragEnter)\n\t\t\tnode.removeEventListener('dragover', handleDragOver)\n\t\t\tnode.removeEventListener('drop', handleDrop)\n\t\t}\n\t}\n\n\tprivate addEventListeners(target: Node) {\n\t\t// SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n\t\tif (!target.addEventListener) {\n\t\t\treturn\n\t\t}\n\t\ttarget.addEventListener(\n\t\t\t'dragstart',\n\t\t\tthis.handleTopDragStart as EventListener,\n\t\t)\n\t\ttarget.addEventListener('dragstart', this.handleTopDragStartCapture, true)\n\t\ttarget.addEventListener('dragend', this.handleTopDragEndCapture, true)\n\t\ttarget.addEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnter as EventListener,\n\t\t)\n\t\ttarget.addEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnterCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener(\n\t\t\t'dragleave',\n\t\t\tthis.handleTopDragLeaveCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener('dragover', this.handleTopDragOver as EventListener)\n\t\ttarget.addEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOverCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener('drop', this.handleTopDrop as EventListener)\n\t\ttarget.addEventListener(\n\t\t\t'drop',\n\t\t\tthis.handleTopDropCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t}\n\n\tprivate removeEventListeners(target: Node) {\n\t\t// SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n\t\tif (!target.removeEventListener) {\n\t\t\treturn\n\t\t}\n\t\ttarget.removeEventListener('dragstart', this.handleTopDragStart as any)\n\t\ttarget.removeEventListener(\n\t\t\t'dragstart',\n\t\t\tthis.handleTopDragStartCapture,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener('dragend', this.handleTopDragEndCapture, true)\n\t\ttarget.removeEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnter as EventListener,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnterCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragleave',\n\t\t\tthis.handleTopDragLeaveCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOver as EventListener,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOverCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener('drop', this.handleTopDrop as EventListener)\n\t\ttarget.removeEventListener(\n\t\t\t'drop',\n\t\t\tthis.handleTopDropCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t}\n\n\tprivate getCurrentSourceNodeOptions() {\n\t\tconst sourceId = this.monitor.getSourceId() as string\n\t\tconst sourceNodeOptions = this.sourceNodeOptions.get(sourceId)\n\n\t\treturn {\n\t\t\tdropEffect: this.altKeyPressed ? 'copy' : 'move',\n\t\t\t...(sourceNodeOptions || {}),\n\t\t}\n\t}\n\n\tprivate getCurrentDropEffect() {\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\t// It makes more sense to default to 'copy' for native resources\n\t\t\treturn 'copy'\n\t\t}\n\n\t\treturn this.getCurrentSourceNodeOptions().dropEffect\n\t}\n\n\tprivate getCurrentSourcePreviewNodeOptions() {\n\t\tconst sourceId = this.monitor.getSourceId() as string\n\t\tconst sourcePreviewNodeOptions = this.sourcePreviewNodeOptions.get(sourceId)\n\n\t\treturn {\n\t\t\tanchorX: 0.5,\n\t\t\tanchorY: 0.5,\n\t\t\tcaptureDraggingState: false,\n\t\t\t...(sourcePreviewNodeOptions || {}),\n\t\t}\n\t}\n\n\tprivate getSourceClientOffset = (sourceId: string): XYCoord | null => {\n\t\tconst source = this.sourceNodes.get(sourceId)\n\t\treturn (source && getNodeClientOffset(source as HTMLElement)) || null\n\t}\n\n\tprivate isDraggingNativeItem() {\n\t\tconst itemType = this.monitor.getItemType()\n\t\treturn Object.keys(NativeTypes).some(\n\t\t\t(key: string) => (NativeTypes as any)[key] === itemType,\n\t\t)\n\t}\n\n\tprivate beginDragNativeItem(type: string, dataTransfer?: DataTransfer) {\n\t\tthis.clearCurrentDragSourceNode()\n\n\t\tthis.currentNativeSource = createNativeDragSource(type, dataTransfer)\n\t\tthis.currentNativeHandle = this.registry.addSource(\n\t\t\ttype,\n\t\t\tthis.currentNativeSource,\n\t\t)\n\t\tthis.actions.beginDrag([this.currentNativeHandle])\n\t}\n\n\tprivate endDragNativeItem = (): void => {\n\t\tif (!this.isDraggingNativeItem()) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.actions.endDrag()\n\t\tif (this.currentNativeHandle) {\n\t\t\tthis.registry.removeSource(this.currentNativeHandle)\n\t\t}\n\t\tthis.currentNativeHandle = null\n\t\tthis.currentNativeSource = null\n\t}\n\n\tprivate isNodeInDocument = (node: Node | null | undefined): boolean => {\n\t\t// Check the node either in the main document or in the current context\n\t\treturn Boolean(\n\t\t\tnode &&\n\t\t\t\tthis.document &&\n\t\t\t\tthis.document.body &&\n\t\t\t\tthis.document.body.contains(node),\n\t\t)\n\t}\n\n\tprivate endDragIfSourceWasRemovedFromDOM = (): void => {\n\t\tconst node = this.currentDragSourceNode\n\t\tif (node == null || this.isNodeInDocument(node)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (this.clearCurrentDragSourceNode() && this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tprivate setCurrentDragSourceNode(node: Element | null) {\n\t\tthis.clearCurrentDragSourceNode()\n\t\tthis.currentDragSourceNode = node\n\n\t\t// A timeout of > 0 is necessary to resolve Firefox issue referenced\n\t\t// See:\n\t\t//   * https://github.com/react-dnd/react-dnd/pull/928\n\t\t//   * https://github.com/react-dnd/react-dnd/issues/869\n\t\tconst MOUSE_MOVE_TIMEOUT = 1000\n\n\t\t// Receiving a mouse event in the middle of a dragging operation\n\t\t// means it has ended and the drag source node disappeared from DOM,\n\t\t// so the browser didn't dispatch the dragend event.\n\t\t//\n\t\t// We need to wait before we start listening for mousemove events.\n\t\t// This is needed because the drag preview needs to be drawn or else it fires an 'mousemove' event\n\t\t// immediately in some browsers.\n\t\t//\n\t\t// See:\n\t\t//   * https://github.com/react-dnd/react-dnd/pull/928\n\t\t//   * https://github.com/react-dnd/react-dnd/issues/869\n\t\t//\n\t\tthis.mouseMoveTimeoutTimer = setTimeout(() => {\n\t\t\treturn this.rootElement?.addEventListener(\n\t\t\t\t'mousemove',\n\t\t\t\tthis.endDragIfSourceWasRemovedFromDOM,\n\t\t\t\ttrue,\n\t\t\t)\n\t\t}, MOUSE_MOVE_TIMEOUT) as any as number\n\t}\n\n\tprivate clearCurrentDragSourceNode() {\n\t\tif (this.currentDragSourceNode) {\n\t\t\tthis.currentDragSourceNode = null\n\n\t\t\tif (this.rootElement) {\n\t\t\t\tthis.window?.clearTimeout(this.mouseMoveTimeoutTimer || undefined)\n\t\t\t\tthis.rootElement.removeEventListener(\n\t\t\t\t\t'mousemove',\n\t\t\t\t\tthis.endDragIfSourceWasRemovedFromDOM,\n\t\t\t\t\ttrue,\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tthis.mouseMoveTimeoutTimer = null\n\t\t\treturn true\n\t\t}\n\n\t\treturn false\n\t}\n\n\tprivate scheduleHover = (dragOverTargetIds: string[] | null) => {\n\t\tif (\n\t\t\tthis.hoverRafId === null &&\n\t\t\ttypeof requestAnimationFrame !== 'undefined'\n\t\t) {\n\t\t\tthis.hoverRafId = requestAnimationFrame(() => {\n\t\t\t\tif (this.monitor.isDragging()) {\n\t\t\t\t\tthis.actions.hover(dragOverTargetIds || [], {\n\t\t\t\t\t\tclientOffset: this.lastClientOffset,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tthis.hoverRafId = null\n\t\t\t})\n\t\t}\n\t}\n\n\tprivate cancelHover = () => {\n\t\tif (\n\t\t\tthis.hoverRafId !== null &&\n\t\t\ttypeof cancelAnimationFrame !== 'undefined'\n\t\t) {\n\t\t\tcancelAnimationFrame(this.hoverRafId)\n\t\t\tthis.hoverRafId = null\n\t\t}\n\t}\n\n\tpublic handleTopDragStartCapture = (): void => {\n\t\tthis.clearCurrentDragSourceNode()\n\t\tthis.dragStartSourceIds = []\n\t}\n\n\tpublic handleDragStart(e: DragEvent, sourceId: string): void {\n\t\tif (e.defaultPrevented) {\n\t\t\treturn\n\t\t}\n\n\t\tif (!this.dragStartSourceIds) {\n\t\t\tthis.dragStartSourceIds = []\n\t\t}\n\t\tthis.dragStartSourceIds.unshift(sourceId)\n\t}\n\n\tpublic handleTopDragStart = (e: DragEvent): void => {\n\t\tif (e.defaultPrevented) {\n\t\t\treturn\n\t\t}\n\n\t\tconst { dragStartSourceIds } = this\n\t\tthis.dragStartSourceIds = null\n\n\t\tconst clientOffset = getEventClientOffset(e)\n\n\t\t// Avoid crashing if we missed a drop event or our previous drag died\n\t\tif (this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t\tthis.cancelHover()\n\t\t}\n\n\t\t// Don't publish the source just yet (see why below)\n\t\tthis.actions.beginDrag(dragStartSourceIds || [], {\n\t\t\tpublishSource: false,\n\t\t\tgetSourceClientOffset: this.getSourceClientOffset,\n\t\t\tclientOffset,\n\t\t})\n\n\t\tconst { dataTransfer } = e\n\t\tconst nativeType = matchNativeItemType(dataTransfer)\n\n\t\tif (this.monitor.isDragging()) {\n\t\t\tif (dataTransfer && typeof dataTransfer.setDragImage === 'function') {\n\t\t\t\t// Use custom drag image if user specifies it.\n\t\t\t\t// If child drag source refuses drag but parent agrees,\n\t\t\t\t// use parent's node as drag image. Neither works in IE though.\n\t\t\t\tconst sourceId: string = this.monitor.getSourceId() as string\n\t\t\t\tconst sourceNode = this.sourceNodes.get(sourceId)\n\t\t\t\tconst dragPreview = this.sourcePreviewNodes.get(sourceId) || sourceNode\n\n\t\t\t\tif (dragPreview) {\n\t\t\t\t\tconst { anchorX, anchorY, offsetX, offsetY } =\n\t\t\t\t\t\tthis.getCurrentSourcePreviewNodeOptions()\n\t\t\t\t\tconst anchorPoint = { anchorX, anchorY }\n\t\t\t\t\tconst offsetPoint = { offsetX, offsetY }\n\t\t\t\t\tconst dragPreviewOffset = getDragPreviewOffset(\n\t\t\t\t\t\tsourceNode as HTMLElement,\n\t\t\t\t\t\tdragPreview as HTMLElement,\n\t\t\t\t\t\tclientOffset,\n\t\t\t\t\t\tanchorPoint,\n\t\t\t\t\t\toffsetPoint,\n\t\t\t\t\t)\n\n\t\t\t\t\tdataTransfer.setDragImage(\n\t\t\t\t\t\tdragPreview,\n\t\t\t\t\t\tdragPreviewOffset.x,\n\t\t\t\t\t\tdragPreviewOffset.y,\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t// Firefox won't drag without setting data\n\t\t\t\tdataTransfer?.setData('application/json', {} as any)\n\t\t\t} catch (err) {\n\t\t\t\t// IE doesn't support MIME types in setData\n\t\t\t}\n\n\t\t\t// Store drag source node so we can check whether\n\t\t\t// it is removed from DOM and trigger endDrag manually.\n\t\t\tthis.setCurrentDragSourceNode(e.target as Element)\n\n\t\t\t// Now we are ready to publish the drag source.. or are we not?\n\t\t\tconst { captureDraggingState } = this.getCurrentSourcePreviewNodeOptions()\n\t\t\tif (!captureDraggingState) {\n\t\t\t\t// Usually we want to publish it in the next tick so that browser\n\t\t\t\t// is able to screenshot the current (not yet dragging) state.\n\t\t\t\t//\n\t\t\t\t// It also neatly avoids a situation where render() returns null\n\t\t\t\t// in the same tick for the source element, and browser freaks out.\n\t\t\t\tsetTimeout(() => this.actions.publishDragSource(), 0)\n\t\t\t} else {\n\t\t\t\t// In some cases the user may want to override this behavior, e.g.\n\t\t\t\t// to work around IE not supporting custom drag previews.\n\t\t\t\t//\n\t\t\t\t// When using a custom drag layer, the only way to prevent\n\t\t\t\t// the default drag preview from drawing in IE is to screenshot\n\t\t\t\t// the dragging state in which the node itself has zero opacity\n\t\t\t\t// and height. In this case, though, returning null from render()\n\t\t\t\t// will abruptly end the dragging, which is not obvious.\n\t\t\t\t//\n\t\t\t\t// This is the reason such behavior is strictly opt-in.\n\t\t\t\tthis.actions.publishDragSource()\n\t\t\t}\n\t\t} else if (nativeType) {\n\t\t\t// A native item (such as URL) dragged from inside the document\n\t\t\tthis.beginDragNativeItem(nativeType)\n\t\t} else if (\n\t\t\tdataTransfer &&\n\t\t\t!dataTransfer.types &&\n\t\t\t((e.target && !(e.target as Element).hasAttribute) ||\n\t\t\t\t!(e.target as Element).hasAttribute('draggable'))\n\t\t) {\n\t\t\t// Looks like a Safari bug: dataTransfer.types is null, but there was no draggable.\n\t\t\t// Just let it drag. It's a native type (URL or text) and will be picked up in\n\t\t\t// dragenter handler.\n\t\t\treturn\n\t\t} else {\n\t\t\t// If by this time no drag source reacted, tell browser not to drag.\n\t\t\te.preventDefault()\n\t\t}\n\t}\n\n\tpublic handleTopDragEndCapture = (): void => {\n\t\tif (this.clearCurrentDragSourceNode() && this.monitor.isDragging()) {\n\t\t\t// Firefox can dispatch this event in an infinite loop\n\t\t\t// if dragend handler does something like showing an alert.\n\t\t\t// Only proceed if we have not handled it already.\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleTopDragEnterCapture = (e: DragEvent): void => {\n\t\tthis.dragEnterTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t}\n\n\t\tconst isFirstEnter = this.enterLeaveCounter.enter(e.target)\n\t\tif (!isFirstEnter || this.monitor.isDragging()) {\n\t\t\treturn\n\t\t}\n\n\t\tconst { dataTransfer } = e\n\t\tconst nativeType = matchNativeItemType(dataTransfer)\n\n\t\tif (nativeType) {\n\t\t\t// A native item (such as file or URL) dragged from outside the document\n\t\t\tthis.beginDragNativeItem(nativeType, dataTransfer as DataTransfer)\n\t\t}\n\t}\n\n\tpublic handleDragEnter(_e: DragEvent, targetId: string): void {\n\t\tthis.dragEnterTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDragEnter = (e: DragEvent): void => {\n\t\tconst { dragEnterTargetIds } = this\n\t\tthis.dragEnterTargetIds = []\n\n\t\tif (!this.monitor.isDragging()) {\n\t\t\t// This is probably a native item type we don't understand.\n\t\t\treturn\n\t\t}\n\n\t\tthis.altKeyPressed = e.altKey\n\n\t\t// If the target changes position as the result of `dragenter`, `dragover` might still\n\t\t// get dispatched despite target being no longer there. The easy solution is to check\n\t\t// whether there actually is a target before firing `hover`.\n\t\tif (dragEnterTargetIds.length > 0) {\n\t\t\tthis.actions.hover(dragEnterTargetIds, {\n\t\t\t\tclientOffset: getEventClientOffset(e),\n\t\t\t})\n\t\t}\n\n\t\tconst canDrop = dragEnterTargetIds.some((targetId) =>\n\t\t\tthis.monitor.canDropOnTarget(targetId),\n\t\t)\n\n\t\tif (canDrop) {\n\t\t\t// IE requires this to fire dragover events\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = this.getCurrentDropEffect()\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic handleTopDragOverCapture = (e: DragEvent): void => {\n\t\tthis.dragOverTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t}\n\t}\n\n\tpublic handleDragOver(_e: DragEvent, targetId: string): void {\n\t\tif (this.dragOverTargetIds === null) {\n\t\t\tthis.dragOverTargetIds = []\n\t\t}\n\t\tthis.dragOverTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDragOver = (e: DragEvent): void => {\n\t\tconst { dragOverTargetIds } = this\n\t\tthis.dragOverTargetIds = []\n\n\t\tif (!this.monitor.isDragging()) {\n\t\t\t// This is probably a native item type we don't understand.\n\t\t\t// Prevent default \"drop and blow away the whole document\" action.\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = 'none'\n\t\t\t}\n\t\t\treturn\n\t\t}\n\n\t\tthis.altKeyPressed = e.altKey\n\t\tthis.lastClientOffset = getEventClientOffset(e)\n\n\t\tthis.scheduleHover(dragOverTargetIds)\n\n\t\tconst canDrop = (dragOverTargetIds || []).some((targetId) =>\n\t\t\tthis.monitor.canDropOnTarget(targetId),\n\t\t)\n\n\t\tif (canDrop) {\n\t\t\t// Show user-specified drop effect.\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = this.getCurrentDropEffect()\n\t\t\t}\n\t\t} else if (this.isDraggingNativeItem()) {\n\t\t\t// Don't show a nice cursor but still prevent default\n\t\t\t// \"drop and blow away the whole document\" action.\n\t\t\te.preventDefault()\n\t\t} else {\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = 'none'\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic handleTopDragLeaveCapture = (e: DragEvent): void => {\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\te.preventDefault()\n\t\t}\n\n\t\tconst isLastLeave = this.enterLeaveCounter.leave(e.target)\n\t\tif (!isLastLeave) {\n\t\t\treturn\n\t\t}\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tsetTimeout(() => this.endDragNativeItem(), 0)\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleTopDropCapture = (e: DragEvent): void => {\n\t\tthis.dropTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\te.preventDefault()\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t} else if (matchNativeItemType(e.dataTransfer)) {\n\t\t\t// Dragging some elements, like <a> and <img> may still behave like a native drag event,\n\t\t\t// even if the current drag event matches a user-defined type.\n\t\t\t// Stop the default behavior when we're not expecting a native item to be dropped.\n\n\t\t\te.preventDefault()\n\t\t}\n\n\t\tthis.enterLeaveCounter.reset()\n\t}\n\n\tpublic handleDrop(_e: DragEvent, targetId: string): void {\n\t\tthis.dropTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDrop = (e: DragEvent): void => {\n\t\tconst { dropTargetIds } = this\n\t\tthis.dropTargetIds = []\n\n\t\tthis.actions.hover(dropTargetIds, {\n\t\t\tclientOffset: getEventClientOffset(e),\n\t\t})\n\t\tthis.actions.drop({ dropEffect: this.getCurrentDropEffect() })\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.endDragNativeItem()\n\t\t} else if (this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleSelectStart = (e: DragEvent): void => {\n\t\tconst target = e.target as HTMLElement & { dragDrop: () => void }\n\n\t\t// Only IE requires us to explicitly say\n\t\t// we want drag drop operation to start\n\t\tif (typeof target.dragDrop !== 'function') {\n\t\t\treturn\n\t\t}\n\n\t\t// Inputs and textareas should be selectable\n\t\tif (\n\t\t\ttarget.tagName === 'INPUT' ||\n\t\t\ttarget.tagName === 'SELECT' ||\n\t\t\ttarget.tagName === 'TEXTAREA' ||\n\t\t\ttarget.isContentEditable\n\t\t) {\n\t\t\treturn\n\t\t}\n\n\t\t// For other targets, ask IE\n\t\t// to enable drag and drop\n\t\te.preventDefault()\n\t\ttarget.dragDrop()\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}