{"ast":null,"code":"// cheap lodash replacements\nexport function memoize(fn) {\n  var result = null;\n\n  var memoized = function memoized() {\n    if (result == null) {\n      result = fn();\n    }\n\n    return result;\n  };\n\n  return memoized;\n}\n/**\n * drop-in replacement for _.without\n */\n\nexport function without(items, item) {\n  return items.filter(function (i) {\n    return i !== item;\n  });\n}\nexport function union(itemsA, itemsB) {\n  var set = new Set();\n\n  var insertItem = function insertItem(item) {\n    return set.add(item);\n  };\n\n  itemsA.forEach(insertItem);\n  itemsB.forEach(insertItem);\n  var result = [];\n  set.forEach(function (key) {\n    return result.push(key);\n  });\n  return result;\n}","map":{"version":3,"mappings":"AAAA;AAEA,OAAO,SAASA,OAAT,CAAoBC,EAApB,EAA0C;EAChD,IAAIC,MAAM,GAAa,IAAvB;;EACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;IACtB,IAAID,MAAM,IAAI,IAAd,EAAoB;MACnBA,MAAM,GAAGD,EAAE,EAAXC;IACA;;IACD,OAAOA,MAAP;EACA,CALD;;EAMA,OAAOC,QAAP;AACA;AAED;;;;AAGA,OAAO,SAASC,OAAT,CAAoBC,KAApB,EAAgCC,IAAhC,EAAyC;EAC/C,OAAOD,KAAK,CAACE,MAANF,CAAa,UAACG,CAAD;IAAA,OAAOA,CAAC,KAAKF,IAAb;EAAA,CAAbD,CAAP;AACA;AAED,OAAO,SAASI,KAAT,CAA0CC,MAA1C,EAAuDC,MAAvD,EAAoE;EAC1E,IAAMC,GAAG,GAAG,IAAIC,GAAJ,EAAZ;;EACA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACR,IAAD;IAAA,OAAaM,GAAG,CAACG,GAAJH,CAAQN,IAARM,CAAb;EAAA,CAAnB;;EACAF,MAAM,CAACM,OAAPN,CAAeI,UAAfJ;EACAC,MAAM,CAACK,OAAPL,CAAeG,UAAfH;EAEA,IAAMT,MAAM,GAAQ,EAApB;EACAU,GAAG,CAACI,OAAJJ,CAAY,UAACK,GAAD;IAAA,OAASf,MAAM,CAACgB,IAAPhB,CAAYe,GAAZf,CAAT;EAAA,CAAZU;EACA,OAAOV,MAAP;AACA","names":["memoize","fn","result","memoized","without","items","item","filter","i","union","itemsA","itemsB","set","Set","insertItem","add","forEach","key","push"],"sources":["/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/node_modules/react-dnd-html5-backend/src/utils/js_utils.ts"],"sourcesContent":["// cheap lodash replacements\n\nexport function memoize<T>(fn: () => T): () => T {\n\tlet result: T | null = null\n\tconst memoized = () => {\n\t\tif (result == null) {\n\t\t\tresult = fn()\n\t\t}\n\t\treturn result\n\t}\n\treturn memoized\n}\n\n/**\n * drop-in replacement for _.without\n */\nexport function without<T>(items: T[], item: T) {\n\treturn items.filter((i) => i !== item)\n}\n\nexport function union<T extends string | number>(itemsA: T[], itemsB: T[]) {\n\tconst set = new Set<T>()\n\tconst insertItem = (item: T) => set.add(item)\n\titemsA.forEach(insertItem)\n\titemsB.forEach(insertItem)\n\n\tconst result: T[] = []\n\tset.forEach((key) => result.push(key))\n\treturn result\n}\n"]},"metadata":{},"sourceType":"module"}