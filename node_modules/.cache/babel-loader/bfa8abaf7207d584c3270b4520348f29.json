{"ast":null,"code":"var _jsxFileName = \"/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/components/Movie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MovieDataService from \"../services/movies\";\nimport { Link, useParams } from 'react-router-dom';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\nimport Image from \"react-bootstrap/Image\";\nimport Button from \"react-bootstrap/Button\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movie = _ref => {\n  _s();\n\n  let {\n    user\n  } = _ref;\n  let params = useParams();\n  const [movie, setMovie] = useState({\n    id: null,\n    title: \"\",\n    rated: \"\",\n    poster: \"\",\n    reviews: []\n  });\n  useEffect(() => {\n    const getMovie = id => {\n      MovieDataService.findById(id).then(response => {\n        console.log(response.data);\n        setMovie(response.data);\n      }).catch(e => {\n        console.log(e);\n      });\n    };\n\n    getMovie(params.id);\n  }, [params.id]);\n\n  const deleteReview = () => {\n    var data = {\n      review_id: review,\n      user_id: user.googleId,\n      movie_id: params.id // get movie id from url\n\n    };\n\n    if (editing) {\n      data.review_id = location.state.currentReview._id;\n      MovieDataService.updateReview(data).then(Response => {\n        navigate(\"/movies/\" + params.id);\n      }).catch(e => {\n        console.log(e);\n      });\n    } else {\n      MovieDataService.createReview(data).then(Response => {\n        navigate(\"/movies/\" + params.id);\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"poster\",\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              className: \"bigPicture\",\n              src: movie.poster + \"/100px250\",\n              onError: e => {\n                e.target.src = '/images/NoPosterAvailable-crop.jpeg'; // some replacement image\n              },\n              fluid: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              as: \"h5\",\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n                children: movie.plot\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }, this), user && /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/movies/\" + params.id + \"/review\",\n                children: \"Add Review\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 43\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Reviews\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), movie.reviews.map((review, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-shrink-0 reviewText\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: [review.name + \" reviewed on \", \" \", moment(review.date).format(\"Do MMMM YYYY\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 39\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"review\",\n                  children: review.review\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 39\n                }, this), user && user.googleId === review.user_id && /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      to: {\n                        pathname: \"/movies/\" + params.id + \"/review\"\n                      },\n                      state: {\n                        currentReview: review\n                      },\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 108,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 43\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"link\",\n                      onClick: () => {//TODO: Impement delete behavior\n                      },\n                      children: \"delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 118,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 43\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 33\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Movie, \"cq36mGJhe5j6tZszeVdh7cbnAIM=\", false, function () {\n  return [useParams];\n});\n\n_c = Movie;\nexport default Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["React","useState","useEffect","MovieDataService","Link","useParams","Col","Row","Container","Card","Image","Button","moment","axios","Movie","user","params","movie","setMovie","id","title","rated","poster","reviews","getMovie","findById","then","response","console","log","data","catch","e","deleteReview","review_id","review","user_id","googleId","movie_id","editing","location","state","currentReview","_id","updateReview","Response","navigate","createReview","target","src","plot","map","index","name","date","format","pathname"],"sources":["/Users/shashawang/Desktop/NEU2022Summer/Web5610/classRepo-MERN-project/shasha-wang-frontend/src/components/Movie.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport MovieDataService from \"../services/movies\";\nimport {Link, useParams} from 'react-router-dom';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\nimport Image from \"react-bootstrap/Image\";\nimport  Button  from \"react-bootstrap/Button\";\nimport moment from \"moment\";\nimport axios from \"axios\";\n\nconst Movie = ({ user }) => {\n    let params = useParams();\n\n    const [movie, setMovie] = useState({\n        id:null,\n        title:\"\",\n        rated:\"\",\n        poster:\"\",\n        reviews:[]\n    });\n\n    useEffect(() => {\n        const getMovie = id => {\n            MovieDataService.findById(id)\n            .then(response => {\n            console.log(response.data);\n            setMovie(response.data);\n            }).catch(e => {\n                console.log(e);\n            })\n            \n        }\n        getMovie(params.id);\n    }, [params.id]);\n\n    const deleteReview = () => {\n        var data = {\n            review_id: review,\n            user_id: user.googleId,\n            movie_id: params.id // get movie id from url\n        }\n\n        if (editing) {\n            data.review_id = location.state.currentReview._id;\n            MovieDataService.updateReview(data)\n                .then(Response => {\n                    navigate(\"/movies/\" + params.id)\n                })\n                .catch(e => {\n                    console.log(e);\n                });\n\n        } else {\n            MovieDataService.createReview(data)\n                .then(Response => {\n                    navigate(\"/movies/\" + params.id)\n                })\n                .catch(e => {\n                    console.log(e);\n                });\n        }\n    }\n\n    return (\n        <div>\n            <Container>\n                <Row>\n                    <Col>\n                        <div className=\"poster\">\n                            <Image\n                                className=\"bigPicture\"\n                                src={movie.poster+\"/100px250\"}\n                                onError={(e) => {\n                                    e.target.src = '/images/NoPosterAvailable-crop.jpeg' // some replacement image\n                                 }}\n                                fluid />\n                        </div>\n                    </Col>\n                    <Col>\n                        <Card>\n                            <Card.Header as=\"h5\">\n                                {movie.title}\n                            </Card.Header>\n                            <Card.Body>\n                                <Card.Text>\n                                    {movie.plot}\n                                </Card.Text>\n                                { user && <Link to={\"/movies/\"+params.id + \"/review\"}>\n                                    Add Review\n                                </Link>}\n                            </Card.Body>\n                        </Card>\n                        <h2>\n                            Reviews\n                        </h2>\n                        <br></br>\n                        {movie.reviews.map((review, index) => {\n                            return (\n                                <div className=\"d-flex\">\n                                    <div className=\"flex-shrink-0 reviewText\">\n                                      <h5>{review.name + \" reviewed on \"} { moment(review.date).format(\"Do MMMM YYYY\")}</h5>\n                                      <p className=\"review\">{review.review}</p>\n                                      { user && user.googleId === review.user_id &&\n                                        <Row>\n                                          <Col>\n                                            <Link to={{\n                                              pathname: \"/movies/\"+params.id+\"/review\"\n                                            }}\n                                            state = {{\n                                              currentReview: review\n                                            }}>\n                                              Edit\n                                            </Link>\n                                          </Col>\n                                          <Col>\n                                            <Button variant=\"link\" onClick={ () =>\n                                            {\n                                              //TODO: Impement delete behavior\n                                             }}>\n                                            delete\n                                            </Button>\n                                          </Col>\n                                        </Row>\n                                      } \n                                    </div>\n                                </div>\n                            )\n                        })}\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n}\n\nexport default Movie;"],"mappings":"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"},"metadata":{},"sourceType":"module"}